{"version":3,"sources":["components/ContactForm/index.js","components/ContactForm/ContactForm.jsx","components/ContactList/index.js","components/ContactList/ContactList.jsx","components/Filter/index.js","components/Filter/Filter.jsx","components/App.jsx","index.js"],"names":["ContactForm","state","name","number","hendleSubmit","e","preventDefault","props","onAdd","setState","hendleInputChange","target","value","this","onSubmit","type","onChange","className","Component","ContactList","contacts","onRemove","map","id","key","onClick","Filter","filter","handleFilterChange","onFilterChange","App","handleAddContact","some","contact","toast","warn","uuidv4","filterContacts","includes","handleRemoveContact","saveData","localStorage","setItem","JSON","stringify","loadData","savedContacts","parse","getItem","length","position","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3ef75ce.chunk.js","sourcesContent":["import ContactForm from './ContactForm';\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAdd: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAdd(this.state);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  hendleInputChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.hendleSubmit}>\r\n        <h3>Name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.hendleInputChange}\r\n        />\r\n        <h3>Number</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={this.hendleInputChange}\r\n        />\r\n        <button className=\"addButton\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import ContactList from './ContactList';\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <span className=\"name\">{name}:</span>\r\n          <span className=\"number\">{number}</span>\r\n          <button className=\"removeButton\" onClick={() => onRemove(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import Filter from './Filter';\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends Component {\r\n  static propTypes = {\r\n    onFilterChange: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    filter: '',\r\n  };\r\n\r\n  handleFilterChange = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState(\r\n      {\r\n        filter: e.target.value,\r\n      },\r\n      () => this.props.onFilterChange(this.state),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className=\"filter\">\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={this.handleFilterChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  handleAddContact = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      toast.warn(`${name} is already in contacts`);\r\n\r\n      return;\r\n    }\r\n\r\n    if (!name || !number) {\r\n      toast.warn(`Please enter the contact name and number`);\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [\r\n        ...contacts,\r\n        {\r\n          id: uuidv4(),\r\n          name,\r\n          number,\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  handleFilterChange = ({ filter }) => {\r\n    this.setState({\r\n      filter,\r\n    });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const filteredContacts = filter\r\n      ? contacts.filter(contact => contact.name.includes(filter))\r\n      : contacts;\r\n\r\n    return filteredContacts;\r\n  };\r\n\r\n  handleRemoveContact = id => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  saveData = () => {\r\n    localStorage.setItem('phonebook', JSON.stringify(this.state));\r\n  };\r\n\r\n  loadData = () => {\r\n    const savedContacts = JSON.parse(localStorage.getItem('phonebook'));\r\n\r\n    if (savedContacts) {\r\n      this.setState({ contacts: savedContacts });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.saveData();\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAdd={this.handleAddContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        {contacts.length >= 2 && (\r\n          <Filter onFilterChange={this.handleFilterChange} />\r\n        )}\r\n\r\n        <ContactList\r\n          contacts={this.filterContacts()}\r\n          onRemove={this.handleRemoveContact}\r\n        />\r\n        <ToastContainer position=\"top-center\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}